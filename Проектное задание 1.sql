--Код создания и заполнения таблиц

CREATE TABLE Operations(дата data, Номенклатура VARCHAR (355) , Менеджер VARCHAR (355), Кассовый_аппарат VARCHAR (355));

INSERT INTO Operations VALUES 
('27-08-45','в7','М3','5к'),
('27-08-45','в4','Ч2','2к'),
('27-08-45','в6','Ч2','2к'),
('27-08-45','в7','С2','6к'),
('27-08-45','в7','М2','4к'),
('28-08-45','в8','Ч1','1к'),
('28-08-45','в6','М2','4к'),
('28-08-45','в8','С2','6к'),
('28-08-45','в9','Ч1','1к'),
('28-08-45','в1','М1','3к'),
('28-08-45','в4','С3','7к'),
('29-08-45','в9','С2','6к'),
('30-08-45','в6','Ч2','2к'),
('31-08-45','в4','С3','7к'),
('01-09-45','в10','С3','7к'),
('01-09-45','в10','М3','5к'),
('01-09-45','в5','М2','4к'),
('01-09-45','в5','Ч1','1к'),
('01-09-45','в5','Ч1','1к'),
('01-09-45','в4','М2','4к'),
('01-09-45','в1','Ч2','2к'),
('01-09-45','в10','С2','6к'),
('01-09-45','в10','Ч1','1к');

CREATE TABLE nomenklature(Номенклатура VARCHAR (355), Иерархия_1 VARCHAR (355) , Иерархия_2 VARCHAR (355), Стоимость serial);
INSERT INTO nomenklature VALUES 
('в1','Газ','Кислород','100'),
('в2','Газ','Азот','200'),
('в3','Газ','Сероводород','300'),
('в4','Газ','Амиаак','100'),
('в5','Газ','Гелий','200'),
('в6','Газ','Углекислый газ','10'),
('в7','Жидкость','Вода','400'),
('в8','Жидкость','Вода с Лимоном','500'),
('в9','Жидкость','Жидкий кислород','400'),
('в10','Жидкость','Жидкий водород','400');


CREATE TABLE meneger(Код_менеджера VARCHAR (355), ФИО VARCHAR (355) , Пол VARCHAR (355),Расса VARCHAR (355), Год_Рождения serial, Квалификация VARCHAR (355));

INSERT INTO meneger VALUES  ('Ч1','Гумерова Арина Ринатовна','Женский','Человек','2030','Мастер'),
('Ч2','Калкаманова Линара Альфаридовна','Женский','Человек','2027','Гуру'),
('М1','Пи Пи Аро','-','Дроид','2001','Ученик'),
('М2','R2D2','-','Дроид','2041','Универсал'),
('М3','S3PO','-','Дроид','2030','Ученик'),
('С2','Александр Сергеевич Пушкин','Мужской','Призрак','1799','Гуру'),
('С3','Стив Джобс','Мужской','Призрак','1955','Гуру'),
('С4','Билл Гейтс','Мужскй','Призрак','1955','Гуру');


CREATE TABLE adress(Код_кассового_аппарата VARCHAR (355), Адрес VARCHAR (355));
INSERT INTO adress VALUES
('1к','Марс, станция "Первый марсианин"'),
('2к','Марс, станция "Первый марсианин"'),
('3к','Луна, станция "Вторая колыбель"'),
('4к','Луна, станция "Вторая колыбель"'),
('5к','Фобос, станция "Дозаправься и лети дальше"'),
('6к','Плутон, станция "Далеко, зато дешево"'),
('7к','Меркурий, станция "Огонь"');




--2)Запросы

--2.1 
--Показывает число покупок совершённых за день 

select Operations.дата, count(Operations.дата) as Число_покупок_за_день from operations 
join adress on adress.Код_кассового_аппарата=Operations.Кассовый_аппарат
group by Operations.дата ;



--2.2 
--Расса у которой покупают больше всего

select meneger.Расса, count(meneger.Расса) as Число_покупок_у_менеджера from operations operations
join adress on adress.Код_кассового_аппарата=Operations.Кассовый_аппарат
join meneger on meneger.Код_менеджера = Operations.Менеджер
group by meneger.Расса
order by count(meneger.Расса) desc;


--2.3
--Смотрим распредеение расс по станциям. 
--Видно что менеджеры человеческой рассы присутствуют только на Марсе, на остальных станциях клиентов обслуживают только призраки и дроиды. 

select adress.Адрес, meneger.Расса, count(meneger.Расса) as Число_покупок_у_менеджера from operations operations
join adress on adress.Код_кассового_аппарата=Operations.Кассовый_аппарат
join meneger on meneger.Код_менеджера = Operations.Менеджер
group by meneger.Расса, adress.Адрес
order by count(meneger.Расса) desc;


--2.4 

--Средняя стоимость товаров по первой иерархии отсортированная 

select nomenklature.Иерархия_1, avg(nomenklature.Стоимость) as Средняя_стоимость from operations operations
join adress on adress.Код_кассового_аппарата=Operations.Кассовый_аппарат
join nomenklature on nomenklature.Номенклатура= Operations.Номенклатура
group by nomenklature.Иерархия_1
order by avg(nomenklature.Стоимость) desc;

--2.5 

--Смотрим на какой станции сколько кассовых аппаратов. 

Select Адрес, count(Код_кассового_аппарата) as Число_кассовых_аппаратов_на_станции 
from adress
group by Адрес
order by count(Код_кассового_аппарата) desc;

--2.6 

-Смотрим станции где несколько кассовых аппаратов

Select Адрес, count(Код_кассового_аппарата) as Число_кассовых_аппаратов_на_станции 
from adress
group by Адрес
having count(Код_кассового_аппарата)> 1
order by count(Код_кассового_аппарата) desc;

--2.7

--Запрос показывает за какой промежуто была выгружена статистика данных

Select (max(дата)-min(дата)) as Число_дней_за_которые_выгружена_статистика from operations;


--2.8 

--Запрос показывает сколько менеджеров работает 

Select count(distinct(ФИО) as число_менеджеров from meneger;


--2.9 

--Запрос показывает сколько всего было продано каждого товара

select nomenklature.Иерархия_2, count(nomenklature.Иерархия_2) as Число_покупок from operations
join nomenklature on nomenklature.Номенклатура= Operations.Номенклатура
group by nomenklature.Иерархия_2
order by count(nomenklature.Иерархия_2) desc;

--2.10

--Показывает топ товаров по обороту.


select nomenklature.Иерархия_2, sum(nomenklature.Стоимость) as Число_покупок from operations
join nomenklature on nomenklature.Номенклатура= Operations.Номенклатура
group by nomenklature.Иерархия_2
order by sum(nomenklature.Стоимость) desc;


--3. Создать представление View

--3.1 Данное представление создат табличку с только людьми

CREATE VIEW People as 
select * from operations
join meneger on meneger.Код_менеджера = Operations.Менеджер
where meneger.Расса = 'Человек';

--3.2 Данное представление показывает продажи только продавцов с классификацией Гуру

CREATE VIEW clasic as 
select * from operations
join meneger on meneger.Код_менеджера = Operations.Менеджер
where meneger.Квалификация= 'Гуру';

--Переходим в командную строку Anaconda prompt
--Устанавливаем библиотеку psycopg2 c помощью команды:
--conda install -c anaconda psycopg2 




